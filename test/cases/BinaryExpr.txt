prec left binOp { mult, plus }

program { expr }

expr {
  atom | BinaryExpr
}

BinaryExpr {
  expr !binOp.mult MultOp expr |
  expr !binOp.plus AddOp expr
}

atom { Symbol | "(" expr ")" }

tokens {
  MultOp { "*" | "/" }
  AddOp { "+" | "-" }
  Symbol { "x" | "y" }
}

---

(x+y)/x

==> BinaryExpr(BinaryExpr(Symbol,AddOp,Symbol),MultOp,Symbol)

---

x+x+x+x

==> BinaryExpr(BinaryExpr(BinaryExpr(Symbol,AddOp,Symbol),AddOp,Symbol),AddOp,Symbol)

---

x+x*x-x

==> BinaryExpr(BinaryExpr(Symbol,AddOp,BinaryExpr(Symbol,MultOp,Symbol)),AddOp,Symbol)

---

x*x+y/y

==> BinaryExpr(BinaryExpr(Symbol,MultOp,Symbol),AddOp,BinaryExpr(Symbol,MultOp,Symbol))

---

(x+y)*x

==> BinaryExpr(BinaryExpr(Symbol,AddOp,Symbol),MultOp,Symbol)
